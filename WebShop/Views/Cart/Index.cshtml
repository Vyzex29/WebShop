@model CartModel
<link rel="stylesheet" href="//netdna.bootstrapcdn.com/bootstrap/3.0.0/css/bootstrap-glyphicons.css">
@if(Model.CartItems.Count == 0){
    <p>There are no items in the cart</p>
}else
{
    <table class="table table-striped">
    <tr class="firstRow">
        <th class="col-sm-3">Image</th>
        <th>Name</th>
        <th>Description</th>
        <th class="col-sm-2">Quantity</th>
        <th>Price</th>
        <th>Remove item</th>
    </tr>
    @foreach (var cartItem in Model.CartItems)
    {
        <tr>
            <td class="col-sm-3"><img class="img-fluid" src="@(System.IO.Path.Combine("Photo", cartItem.Product.FileName))" alt="..."/></td>
            <td>@cartItem.Product.Name</td>
            <td>@cartItem.Product.Description</td>
            <td class="col-sm-2">
                <div class="input-group">
                  <span class="input-group-btn">
                      <button type="button" class="btn btn-danger btn-number minus" data-field="@cartItem.Product.Id">
                          <span class="glyphicon glyphicon-minus"></span>
                      </button>
                  </span>
                  <input id="@cartItem.Product.Id.ToString()" type="number" min="1" class="form-control input-number quantityInput" value="@cartItem.Quantity">
                  <span class="input-group-btn">
                      <button type="submit" class="btn btn-success btn-number plus" data-field="@cartItem.Product.Id">
                          <span class="glyphicon glyphicon-plus"></span>
                          </button>
                     </span>
                </div>
            </td>
            <td>@cartItem.Product.Price</td>
            <td>
                <form asp-controller="Cart" asp-action="RemoveAnItem" asp-route-cartItemId="@cartItem.Id">
                    <button type ="submit" class="btn btn-outline-danger">
                        <svg xmlns="http://www.w3.org/2000/svg" width="16" height="16" fill="currentColor" class="bi bi-x" viewBox="0 0 16 16">
                        <path d="M4.646 4.646a.5.5 0 0 1 .708 0L8 7.293l2.646-2.647a.5.5 0 0 1 .708.708L8.707 8l2.647 2.646a.5.5 0 0 1-.708.708L8 8.707l-2.646 2.647a.5.5 0 0 1-.708-.708L7.293 8 4.646 5.354a.5.5 0 0 1 0-.708z"></path>
                        </svg>
                     </button>
                </form>
            </td>
        </tr>
    }
</table>
<a class="btn btn-primary" asp-controller="Cart" asp-action="Purchase">Buy</a>
}
@section Scripts{
    <script>
$(document).ready(function() {
    $(".minus").click(function(e) {
        e.preventDefault();
        productId = $(this).attr("data-field");
        console.log("itemId: " + productId);
        CallMinus(productId);
    });
});
$(document).ready(function() {
    $(".plus").click(function(e) {
        e.preventDefault();
        productId = $(this).attr("data-field");
        console.log("itemId: " + productId);
        CallPlus(productId);
    });
});

$(document).ready(function() {
    $(".quantityInput").change(function(e) {
        e.preventDefault();
        productId = $(this).attr("id");
        console.log("itemId: " + productId);
        inputField = document.getElementById(productId);
        inputValue = parseInt(inputField.value);
        console.log("inputValue" + inputValue);
        validatedQuantity = 0;
        if (!isNaN(inputValue) && inputValue > 0) {
            console.log("The input was changed to -> " + inputValue);
            validatedQuantity = inputValue;
        } else {
            inputField.setAttribute("value", "1");
            validatedQuantity = 1;
        }
        CallEditQuantity(productId, validatedQuantity)
    });
});

function CallMinus(productId) {
    let inputField = document.getElementById(productId);
    console.log("InputField value:" + inputField.value);
    if (inputField.value > 1) {
         var currentVal = parseInt(inputField.value);
                var newValue = currentVal - 1;
                inputField.setAttribute("value", newValue);
        $.ajax({
            type: "POST",
            url: "@Url.Action("SubtractAnItem")",
            data: { itemId: productId }, // { "itemId":"${productIdValue}"}
            dataType: "json",
            success: function(result) {
                console.log(result);
               

            },
            error: function(req, status, error) {
                console.log(req);
                console.log(status);
                console.log(error);
            }
        });
    }
};

function CallPlus(productId) {
    let inputField = document.getElementById(productId);
    console.log("InputField value: " + inputField.value);
    console.log("ProductId before ajax call: " + productId);
    $.ajax({
        type: "POST",
        url: "@Url.Action("AddAProduct")",
        data: { itemId: productId  }, // { "itemId":"${productIdValue}"}
        dataType: "json",
        success: function(result) {
            console.log(result);
            var currentVal = parseInt(inputField.value);
            var newValue = currentVal + 1;
            inputField.setAttribute("value", newValue);

        },
        error: function(req, status, error) {
            console.log(req);
            console.log(status);
            console.log(error);
        }
    });
};

function CallEditQuantity(productId, quantity) {
     $.ajax({
        type: "POST",
        url: "@Url.Action("EditQuantity")",
        data: { quantity: quantity, itemId: productId  }, // { "itemId":"${productIdValue}"}
        dataType: "json",
        success: function(result) {
            console.log(result);
        },
        error: function(req, status, error) {
            console.log(req);
            console.log(status);
            console.log(error);
        }
    });
};
   </script>
}